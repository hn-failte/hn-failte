(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{435:function(e,t,r){"use strict";r.r(t);var a=r(21),v=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"为什么不用redux"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么不用redux"}},[e._v("#")]),e._v(" 为什么不用Redux")]),e._v(" "),r("p",[e._v("在React项目中，往往都配合Redux，但是，换了公司后，发现新公司的项目居然没有使用Redux，我意识到自己从来没有想过为什么项目中要用Redux......")]),e._v(" "),r("h2",{attrs:{id:"redux的由来"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redux的由来"}},[e._v("#")]),e._v(" Redux的由来")]),e._v(" "),r("p",[e._v("最开始React中是流行是使用Flux处理数据，但是Flux基本上都是需要手动实现，于是便产生了Redux。")]),e._v(" "),r("h2",{attrs:{id:"redux的思想"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redux的思想"}},[e._v("#")]),e._v(" Redux的思想")]),e._v(" "),r("p",[e._v("核心思想：")]),e._v(" "),r("ul",[r("li",[e._v("单一数据源")]),e._v(" "),r("li",[e._v("状态是只读的")]),e._v(" "),r("li",[e._v("纯函数")])]),e._v(" "),r("p",[e._v("基本方法：\nRedux包含createStore、combineReducer、dispatch、getState、subscribe等方法")]),e._v(" "),r("p",[e._v("数据流向：\nUI层提前subscribe更新UI的订阅事件\nUI层dispatch一个action\naction经过Store传递到Reducer\nReducer修改Store中的数据并emit订阅事件\n订阅的事件通过getState获取Store中的数据并执行订阅事件更新UI层")]),e._v(" "),r("h2",{attrs:{id:"redux的使用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redux的使用场景"}},[e._v("#")]),e._v(" Redux的使用场景")]),e._v(" "),r("p",[e._v("1、中大型项目")]),e._v(" "),r("p",[e._v("2、大多数页面都要用到公共信息")]),e._v(" "),r("p",[e._v("3、一个页面存在多个请求")]),e._v(" "),r("p",[e._v("4、组件间期望通过非组件的形式通信")]),e._v(" "),r("h2",{attrs:{id:"为什么不用redux-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么不用redux-2"}},[e._v("#")]),e._v(" 为什么不用Redux")]),e._v(" "),r("p",[e._v("1、小型项目")]),e._v(" "),r("p",[e._v("2、首页的数据每次都需要刷新")]),e._v(" "),r("p",[e._v("3、存在高度复用页面（如：详情页、结果页）")]),e._v(" "),r("p",[e._v("4、多源多请求复用率很低的数据")])])}),[],!1,null,null,null);t.default=v.exports}}]);